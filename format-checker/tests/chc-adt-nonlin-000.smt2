; ./adt-purified/./4-just-rec-just-rec-00-1.Z3.0_000.smt2
(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-datatypes ((MutInt_0 0)) (((mutInt_1 (curInt_0 Nat_0) (retInt_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun not_0 (Bool Bool) Bool)
(declare-fun diseqMutInt_0 (MutInt_0 MutInt_0) Bool)
(declare-fun curInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun retInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun ismutInt_0 (MutInt_0) Bool)
(declare-fun justrec_0 (MutInt_0) Bool)
(declare-fun justrec_1 (MutInt_0 Bool) Bool)
(declare-fun main_0 (Bool) Bool)
(declare-fun main_1 (Bool Bool) Bool)





(assert (forall ((x_0 MutInt_0) (x_1 Bool))
	(=> (justrec_1 x_0 x_1)
	    (justrec_0 x_0))))
(assert (forall ((x_2 MutInt_0) (x_3 Nat_0) (f Bool) (t MutInt_0) (x_4 Nat_0) (x_5 Nat_0) (x_34 Nat_0) (x_35 Nat_0))
	(=>	(and
    			(retInt_1 x_34 x_2)
			(curInt_1 x_35 x_2)
            (justrec_0 t)
            (= t (mutInt_1 x_3 x_5))
			(= x_4 x_5)
			(= x_34 x_35)
            (= f false)
            )
		(justrec_1 x_2 f))))
(assert (forall ((x_6 MutInt_0) (x_36 Nat_0) (t Bool) (x_37 Nat_0))
	(=>	(and (retInt_1 x_36 x_6)
			(curInt_1 x_37 x_6)
            (= x_36 x_37)
            (= t true)
            )
		(justrec_1 x_6 t))))
(assert (forall ((x_7 Bool) (x_8 Nat_0) (x_9 Nat_0) (t2 Bool) (t MutInt_0) (x_10 Nat_0) (x_14 Bool))
	(=>	(and (justrec_0 t)
    	    (main_1 x_14 x_7)
			(gt_0 x_8 x_9)
            (not_0 x_14 t2)
             (= t (mutInt_1 x_8 x_10))
			(= x_9 x_10)
            (= t2 true))
		(main_0 x_7))))
(assert (forall ((b Bool) (x_13 Nat_0))
	(=> (and (main_0 b) (= b true))
	    false)))
(check-sat)
