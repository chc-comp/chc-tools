(set-info :smt-lib-version 2.6)
(set-logic HORN)
(set-info :origin "
  Horn benchmarks for regression verification problems,
  weaving done by Reve

  References:

  http://formal.iti.kit.edu/projects/improve/reve/

  Dennis Felsing, Sarah Grebing, Vladimir Klebanov, Philipp RÃ¼mmer,
  Mattias Ulbrich:
  Automating regression verification. ASE 2014: 349-360

  Clausification by Eldarica
")
(set-info :status sat)
(declare-fun REC_f_ (Int Int Int) Bool)
(declare-fun REC_f_f (Int Int Int Int Int Int) Bool)
(declare-fun REC__f (Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int)) (not (and (and (and (and (and (and (and (and (and (and (not (= A (+ B 1))) (= (+ C (- 1)) D)) (= (* (- 1) E) (- 1))) (REC_f_ D E A)) (= F 0)) (not (>= (+ F (- 1)) 0))) (= G 0)) (>= (+ C (- 1)) 0)) (not (= C 0))) (= C F)) (= G B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (REC__f D E B)) (= (+ F (- 1)) G)) (= (* (- 1) H) (- 1))) (= (+ I (- 1)) J)) (REC_f_f G H A C J E)) (not (= C 0))) (not (>= (+ C (- 1)) 0))) (= K 0)) (>= (+ F (- 1)) 0)) (not (= F 0))) (= F C)) (= K I)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int)) (not (and (and (and (and (and (and (and (and (and (and (not (= A (+ B 1))) (= (+ C (- 1)) D)) (= (* (- 1) E) (- 1))) (REC_f_ D E A)) (= F 0)) (not (= B 0))) (= G 0)) (>= (+ C (- 1)) 0)) (not (= C 0))) (= C F)) (= G B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (REC__f D E B)) (= (+ F (- 1)) G)) (= (* (- 1) H) (- 1))) (= (+ I (- 1)) J)) (REC_f_f G H A C J E)) (not (= C 0))) (not (= I 0))) (= K 0)) (>= (+ F (- 1)) 0)) (not (= F 0))) (= F C)) (= K I)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (= (* (- 1) E) (- 1))) (= (+ F (- 1)) G)) (= (* (- 1) H) (- 1))) (REC_f_f D E A G H B)) (= I 0)) (>= (+ F (- 1)) 0)) (= J 0)) (>= (+ C (- 1)) 0)) (not (= C 0))) (= C F)) (= J I)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) (not (and (and (and (and (and (and (and (and (and (and (not (= A (+ B 1))) (= (+ C (- 1)) D)) (REC_f_ D E A)) (= (+ F (- 1)) G)) (REC_f_ C G E)) (= H 0)) (not (>= (+ H (- 1)) 0))) (not (= F 0))) (not (= C 0))) (= C H)) (= F B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (= (+ E (- 1)) F)) (REC_f_f D G A F H B)) (= (+ I (- 1)) J)) (= (+ K (- 1)) L)) (REC_f_f C J G E L H)) (not (= E 0))) (not (>= (+ E (- 1)) 0))) (not (= I 0))) (not (= C 0))) (= C E)) (= I K)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) (not (and (and (and (and (and (and (and (and (and (and (not (= A (+ B 1))) (= (+ C (- 1)) D)) (REC_f_ D E A)) (= (+ F (- 1)) G)) (REC_f_ C G E)) (= H 0)) (not (= B 0))) (not (= F 0))) (not (= C 0))) (= C H)) (= F B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (= (+ E (- 1)) F)) (REC_f_f D G A F H B)) (= (+ I (- 1)) J)) (= (+ K (- 1)) L)) (REC_f_f C J G E L H)) (not (= E 0))) (not (= K 0))) (not (= I 0))) (not (= C 0))) (= C E)) (= I K)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (REC_f_ D E A)) (= (+ F (- 1)) G)) (= (+ H (- 1)) I)) (= (* (- 1) J) (- 1))) (REC_f_f C G E I J B)) (= K 0)) (>= (+ H (- 1)) 0)) (not (= F 0))) (not (= C 0))) (= C H)) (= F K)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) (not (and (and (and (and (and (and (and (and (and (and (not (= A (+ B 1))) (= (+ C (- 1)) D)) (REC_f_ D E A)) (= (+ F (- 1)) G)) (REC_f_ C G E)) (= H 0)) (not (>= (+ H (- 1)) 0))) (not (>= (+ C (- 1)) 0))) (not (= C 0))) (= C H)) (= F B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (= (+ E (- 1)) F)) (REC_f_f D G A F H B)) (= (+ I (- 1)) J)) (= (+ K (- 1)) L)) (REC_f_f C J G E L H)) (not (= E 0))) (not (>= (+ E (- 1)) 0))) (not (>= (+ C (- 1)) 0))) (not (= C 0))) (= C E)) (= I K)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) (not (and (and (and (and (and (and (and (and (and (and (not (= A (+ B 1))) (= (+ C (- 1)) D)) (REC_f_ D E A)) (= (+ F (- 1)) G)) (REC_f_ C G E)) (= H 0)) (not (= B 0))) (not (>= (+ C (- 1)) 0))) (not (= C 0))) (= C H)) (= F B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (= (+ E (- 1)) F)) (REC_f_f D G A F H B)) (= (+ I (- 1)) J)) (= (+ K (- 1)) L)) (REC_f_f C J G E L H)) (not (= E 0))) (not (= K 0))) (not (>= (+ C (- 1)) 0))) (not (= C 0))) (= C E)) (= I K)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int)) (not (and (and (and (and (and (and (and (and (and (and (and (and (not (= A B)) (= (+ C (- 1)) D)) (REC_f_ D E A)) (= (+ F (- 1)) G)) (= (+ H (- 1)) I)) (= (* (- 1) J) (- 1))) (REC_f_f C G E I J B)) (= K 0)) (>= (+ H (- 1)) 0)) (not (>= (+ C (- 1)) 0))) (not (= C 0))) (= C H)) (= F K)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int)) (not (and (and (and (and (and (and (and (and (not (= (+ A 1) B)) (= (+ C (- 1)) D)) (= (* (- 1) E) (- 1))) (REC__f D E B)) (= F 0)) (>= (+ C (- 1)) 0)) (= G 0)) (= G C)) (= A F)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) (not (and (and (and (and (and (and (and (and (and (not (= (+ A 1) B)) (= (+ C (- 1)) D)) (REC__f D E B)) (= (+ F (- 1)) G)) (REC__f C G E)) (not (= C 0))) (not (= F 0))) (= H 0)) (= H C)) (= A F)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int)) (not (and (and (and (and (and (not (= (+ A 1) (+ B 1))) (= C 0)) (not (= B 0))) (= D 0)) (= D C)) (= A B)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) (not (and (and (and (and (and (and (and (and (and (not (= (+ A 1) B)) (= (+ C (- 1)) D)) (REC__f D E B)) (= (+ F (- 1)) G)) (REC__f C G E)) (not (= C 0))) (not (>= (+ C (- 1)) 0))) (= H 0)) (= H C)) (= A F)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int)) (not (and (and (and (and (and (not (= (+ A 1) (+ B 1))) (= C 0)) (not (>= (+ C (- 1)) 0))) (= D 0)) (= D C)) (= A B)))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (= (+ B 1) C) (= A 0)) (REC_f_ A B C))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (and (= (+ A (- 1)) D) (REC_f_ D E C)) (= (+ B (- 1)) F)) (REC_f_ A F E)) (not (>= (+ A (- 1)) 0))) (not (= A 0))) (REC_f_ A B C))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (and (= (+ A (- 1)) D) (REC_f_ D E C)) (= (+ B (- 1)) F)) (REC_f_ A F E)) (not (= B 0))) (not (= A 0))) (REC_f_ A B C))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))(=> (and (and (and (and (and (= (+ A (- 1)) D) (= (* (- 1) E) (- 1))) (REC_f_ D E C)) (= B 0)) (>= (+ A (- 1)) 0)) (not (= A 0))) (REC_f_ A B C))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (= (+ B 1) C) (= (+ E 1) F)) (= D 0)) (not (>= (+ D (- 1)) 0))) (= A 0)) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int))(=> (and (and (and (and (and (and (and (= (+ B 1) C) (= (+ D (- 1)) G)) (REC__f G H F)) (= (+ E (- 1)) I)) (REC__f D I H)) (not (= D 0))) (not (>= (+ D (- 1)) 0))) (= A 0)) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (= (+ B 1) C) (= (+ E 1) F)) (= D 0)) (not (= E 0))) (= A 0)) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int))(=> (and (and (and (and (and (and (and (= (+ B 1) C) (= (+ D (- 1)) G)) (REC__f G H F)) (= (+ E (- 1)) I)) (REC__f D I H)) (not (= D 0))) (not (= E 0))) (= A 0)) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (and (and (= (+ B 1) C) (= (+ D (- 1)) G)) (= (* (- 1) H) (- 1))) (REC__f G H F)) (= E 0)) (>= (+ D (- 1)) 0)) (= A 0)) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int))(=> (and (and (and (and (and (and (and (and (and (= (+ A (- 1)) G) (REC_f_ G H C)) (= (+ B (- 1)) I)) (= (+ D (- 1)) J)) (= (* (- 1) K) (- 1))) (REC_f_f A I H J K F)) (= E 0)) (>= (+ D (- 1)) 0)) (not (>= (+ A (- 1)) 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int))(=> (and (and (and (and (and (and (and (and (and (= (+ A (- 1)) G) (= (+ D (- 1)) H)) (REC_f_f G I C H J F)) (= (+ B (- 1)) K)) (= (+ E (- 1)) L)) (REC_f_f A K I D L J)) (not (= D 0))) (not (= E 0))) (not (>= (+ A (- 1)) 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int))(=> (and (and (and (and (and (and (and (and (= (+ E 1) F) (= (+ A (- 1)) G)) (REC_f_ G H C)) (= (+ B (- 1)) I)) (REC_f_ A I H)) (= D 0)) (not (= E 0))) (not (>= (+ A (- 1)) 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int))(=> (and (and (and (and (and (and (and (and (and (= (+ A (- 1)) G) (= (+ D (- 1)) H)) (REC_f_f G I C H J F)) (= (+ B (- 1)) K)) (= (+ E (- 1)) L)) (REC_f_f A K I D L J)) (not (= D 0))) (not (>= (+ D (- 1)) 0))) (not (>= (+ A (- 1)) 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int))(=> (and (and (and (and (and (and (and (and (= (+ E 1) F) (= (+ A (- 1)) G)) (REC_f_ G H C)) (= (+ B (- 1)) I)) (REC_f_ A I H)) (= D 0)) (not (>= (+ D (- 1)) 0))) (not (>= (+ A (- 1)) 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int))(=> (and (and (and (and (and (and (and (and (and (= (+ A (- 1)) G) (REC_f_ G H C)) (= (+ B (- 1)) I)) (= (+ D (- 1)) J)) (= (* (- 1) K) (- 1))) (REC_f_f A I H J K F)) (= E 0)) (>= (+ D (- 1)) 0)) (not (= B 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int))(=> (and (and (and (and (and (and (and (and (and (= (+ A (- 1)) G) (= (+ D (- 1)) H)) (REC_f_f G I C H J F)) (= (+ B (- 1)) K)) (= (+ E (- 1)) L)) (REC_f_f A K I D L J)) (not (= D 0))) (not (= E 0))) (not (= B 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int))(=> (and (and (and (and (and (and (and (and (= (+ E 1) F) (= (+ A (- 1)) G)) (REC_f_ G H C)) (= (+ B (- 1)) I)) (REC_f_ A I H)) (= D 0)) (not (= E 0))) (not (= B 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int))(=> (and (and (and (and (and (and (and (and (and (= (+ A (- 1)) G) (= (+ D (- 1)) H)) (REC_f_f G I C H J F)) (= (+ B (- 1)) K)) (= (+ E (- 1)) L)) (REC_f_f A K I D L J)) (not (= D 0))) (not (>= (+ D (- 1)) 0))) (not (= B 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int))(=> (and (and (and (and (and (and (and (and (= (+ E 1) F) (= (+ A (- 1)) G)) (REC_f_ G H C)) (= (+ B (- 1)) I)) (REC_f_ A I H)) (= D 0)) (not (>= (+ D (- 1)) 0))) (not (= B 0))) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int))(=> (and (and (and (and (and (and (and (and (and (= (+ A (- 1)) G) (= (* (- 1) H) (- 1))) (= (+ D (- 1)) I)) (= (* (- 1) J) (- 1))) (REC_f_f G H C I J F)) (= E 0)) (>= (+ D (- 1)) 0)) (= B 0)) (>= (+ A (- 1)) 0)) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int))(=> (and (and (and (and (and (and (and (and (and (and (= (+ D (- 1)) G) (REC__f G H F)) (= (+ A (- 1)) I)) (= (* (- 1) J) (- 1))) (= (+ E (- 1)) K)) (REC_f_f I J C D K H)) (not (= D 0))) (not (= E 0))) (= B 0)) (>= (+ A (- 1)) 0)) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (and (and (and (and (= (+ E 1) F) (= (+ A (- 1)) G)) (= (* (- 1) H) (- 1))) (REC_f_ G H C)) (= D 0)) (not (= E 0))) (= B 0)) (>= (+ A (- 1)) 0)) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int))(=> (and (and (and (and (and (and (and (and (and (and (= (+ D (- 1)) G) (REC__f G H F)) (= (+ A (- 1)) I)) (= (* (- 1) J) (- 1))) (= (+ E (- 1)) K)) (REC_f_f I J C D K H)) (not (= D 0))) (not (>= (+ D (- 1)) 0))) (= B 0)) (>= (+ A (- 1)) 0)) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))(=> (and (and (and (and (and (and (and (and (= (+ E 1) F) (= (+ A (- 1)) G)) (= (* (- 1) H) (- 1))) (REC_f_ G H C)) (= D 0)) (not (>= (+ D (- 1)) 0))) (= B 0)) (>= (+ A (- 1)) 0)) (not (= A 0))) (REC_f_f A B C D E F))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))(=> (and (and (and (and (= (+ A (- 1)) D) (= (* (- 1) E) (- 1))) (REC__f D E C)) (= B 0)) (>= (+ A (- 1)) 0)) (REC__f A B C))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (and (= (+ A (- 1)) D) (REC__f D E C)) (= (+ B (- 1)) F)) (REC__f A F E)) (not (= A 0))) (not (= B 0))) (REC__f A B C))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (= (+ B 1) C) (= A 0)) (not (= B 0))) (REC__f A B C))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))(=> (and (and (and (and (and (= (+ A (- 1)) D) (REC__f D E C)) (= (+ B (- 1)) F)) (REC__f A F E)) (not (= A 0))) (not (>= (+ A (- 1)) 0))) (REC__f A B C))))
(assert (forall ((A Int) (B Int) (C Int))(=> (and (and (= (+ B 1) C) (= A 0)) (not (>= (+ A (- 1)) 0))) (REC__f A B C))))
(check-sat)
